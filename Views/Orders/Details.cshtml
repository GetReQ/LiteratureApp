@model Literature.Models.Order

@{
  ViewData["Title"] = "Details";
  var orderText = Model.OrderPlaced ? "Cancel Order" : "Place Order";
}

<h2>Details</h2>

<div>
  <h4>Order</h4>
  <hr />
  <h5>Publisher: @Html.DisplayFor(model => model.Publisher.Name)</h5>

  <a asp-action="Order" asp-route-id="@Model.ID">@(orderText)</a>
  
  <table class="table">
    <thead>
      <tr>
        <th>
          @Html.DisplayNameFor(model => model.OrderItems.First().Publication.Title)
        </th>
        <th>
          @Html.DisplayNameFor(model => model.OrderItems.First().Publication.Language)
        </th>
        <th>
          @Html.DisplayNameFor(model => model.OrderItems.First().Publication.Code)
        </th>
        <th>
          @Html.DisplayNameFor(model => model.OrderItems.First().Quantity)
        </th>
      </tr>
    </thead>
    <tbody>
      @foreach (var item in Model.OrderItems)
      {
        <tr>
          <td>
            @Html.DisplayFor(modelItem => item.Publication.Title)
          </td>
          <td>
            @Html.DisplayFor(modelItem => item.Publication.Language)
          </td>
          <td>
            @Html.DisplayFor(modelItem => item.Publication.Code)
          </td>
          <td>
            @Html.DisplayFor(modelItem => item.Quantity)
          </td>
        </tr>
      }
    </tbody>
  </table>
</div>
<div>
  <a asp-action="Edit" asp-route-id="@Model.ID">Edit</a> |
  <a asp-action="Index">Back to List</a>
</div>